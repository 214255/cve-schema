{
    "containers": {
        "cna": {
            "affected": [
                {
                    "product": "n/a",
                    "vendor": "n/a",
                    "versions": [
                        {
                            "status": "affected",
                            "version": "n/a",
                            "versionType": "custom"
                        }
                    ]
                }
            ],
            "descriptions": [
                {
                    "lang": "en",
                    "value": "libvips before 8.7.4 generates output images from uninitialized memory locations when processing corrupted input image data because iofuncs/memory.c does not zero out allocated memory. This can result in leaking raw process memory contents through the output image."
                }
            ],
            "problemtypes": [
                {
                    "descriptions": [
                        {
                            "description": "n/a",
                            "lang": "en",
                            "type": "text"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "dateUpdated": "2021-12-15",
                "orgId": "8254265b-2729-46b6-b9e3-3dfca2d5bfca",
                "shortName": "mitre"
            },
            "references": [
                {
                    "name": "https://github.com/libvips/libvips/commit/00622428bda8d7521db8d74260b519fa41d69d0a",
                    "url": "https://github.com/libvips/libvips/commit/00622428bda8d7521db8d74260b519fa41d69d0a"
                },
                {
                    "name": "https://github.com/libvips/libvips/releases/tag/v8.7.4",
                    "url": "https://github.com/libvips/libvips/releases/tag/v8.7.4"
                },
                {
                    "name": "https://blog.silentsignal.eu/2019/04/18/drop-by-drop-bleeding-through-libvips/",
                    "url": "https://blog.silentsignal.eu/2019/04/18/drop-by-drop-bleeding-through-libvips/"
                }
            ],
            "x_legacyV4Record": {
                "CVE_data_meta": {
                    "ASSIGNER": "cve@mitre.org",
                    "ID": "CVE-2019-6976",
                    "STATE": "PUBLIC"
                },
                "affects": {
                    "vendor": {
                        "vendor_data": [
                            {
                                "product": {
                                    "product_data": [
                                        {
                                            "product_name": "n/a",
                                            "version": {
                                                "version_data": [
                                                    {
                                                        "version_value": "n/a"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "vendor_name": "n/a"
                            }
                        ]
                    }
                },
                "data_format": "MITRE",
                "data_type": "CVE",
                "data_version": "4.0",
                "description": {
                    "description_data": [
                        {
                            "lang": "eng",
                            "value": "libvips before 8.7.4 generates output images from uninitialized memory locations when processing corrupted input image data because iofuncs/memory.c does not zero out allocated memory. This can result in leaking raw process memory contents through the output image."
                        }
                    ]
                },
                "problemtype": {
                    "problemtype_data": [
                        {
                            "description": [
                                {
                                    "lang": "eng",
                                    "value": "n/a"
                                }
                            ]
                        }
                    ]
                },
                "references": {
                    "reference_data": [
                        {
                            "name": "https://github.com/libvips/libvips/commit/00622428bda8d7521db8d74260b519fa41d69d0a",
                            "refsource": "MISC",
                            "url": "https://github.com/libvips/libvips/commit/00622428bda8d7521db8d74260b519fa41d69d0a"
                        },
                        {
                            "name": "https://github.com/libvips/libvips/releases/tag/v8.7.4",
                            "refsource": "MISC",
                            "url": "https://github.com/libvips/libvips/releases/tag/v8.7.4"
                        },
                        {
                            "name": "https://blog.silentsignal.eu/2019/04/18/drop-by-drop-bleeding-through-libvips/",
                            "refsource": "MISC",
                            "url": "https://blog.silentsignal.eu/2019/04/18/drop-by-drop-bleeding-through-libvips/"
                        }
                    ]
                }
            }
        }
    },
    "cveMetadata": {
        "assignerOrgId": "8254265b-2729-46b6-b9e3-3dfca2d5bfca",
        "assignerShortName": "mitre",
        "cveId": "CVE-2019-6976",
        "dateUpdated": "2021-12-15",
        "state": "PUBLIC"
    },
    "dataType": "CVE_RECORD",
    "dataVersion": "5.0"
}